version: 2
jobs:
  build:
    working_directory: ~/klpdotorg/ilp
    parallelism: 1
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    shell: /bin/bash --login
    docker:
      - image: circleci/python:3.10-buster
        environment:
          DATABASE_URL: postgresql://ubuntu:@127.0.0.1:5432/test_ilp
      - image: mdillon/postgis:9.6 # database image for service container available at `localhost:<port>`
        environment: # environment variables for database
          POSTGRES_USER: ubuntu
          POSTGRES_DB: test_ilp
    steps:
      - checkout
      - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run:
          working_directory: ~/klpdotorg/ilp
          command: "echo 'Asia/Kolkata' | sudo tee -a /etc/timezone; sudo dpkg-reconfigure -f noninteractive tzdata;"
      - run: sudo apt-get update && sudo apt-get install -y libgdal-dev python3-dev postgis postgresql-client python3-virtualenv
      - run: python -m venv venv; source venv/bin/activate && pip --no-cache install -r requirements/test.txt
      - run: mv ilp/settings/ci_settings.py.sample ilp/settings/ci_settings.py
      - run: sudo python -m pip --no-cache install coverage requests
      - run: git clean -dxf
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/artifacts

  deploy:
    docker:
      - image: circleci/python:3.10-buster
    working_directory: ~/ilp
    steps:
      - checkout
      - run:
          name: Trigger Jenkins Job
          command: |


            if [[ $CIRCLE_BRANCH == 'production' ]]; then
              JENKINS_USER="jenkins_user"
              JENKINS_API_TOKEN="114287e118629483a5df7c2447582ccc04"
              JENKINS_URL="http://64.225.86.15:8080/"
              JENKINS_JOB="ilp-production-job"
            else
              JENKINS_USER="jenkins_user"
              JENKINS_API_TOKEN="114287e118629483a5df7c2447582ccc04"
              JENKINS_URL="http://64.225.87.131:8080/"
              JENKINS_JOB="ilp-staging-job"
            fi

            echo $CIRCLE_BRANCH
            echo $JENKINS_URL
            echo $JENKINS_JOB

            # response=$(curl -s -o response.txt -w '%{http_code}' -X POST "$JENKINS_URL/job/$JENKINS_JOB/buildWithParameters" \
            #   --user "$JENKINS_USER:$JENKINS_API_TOKEN" \
            #   --data-urlencode json='{"parameter": [{"name":"GIT_COMMIT", "value":"'"$CIRCLE_SHA1"'"}]}')

            # cat response.txt # Print the response body for debugging

            # if [ "$response" -ne 201 ]; then
            #   echo "Failed to trigger Jenkins job. HTTP status code: $response"
            #   exit 1 
            # else
            #   echo "Successfully triggered Jenkins job."
            # fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - production
                - master
      - deploy:
          filters:
            branches:
              only:
                - production
                - master
          requires:
            - build
